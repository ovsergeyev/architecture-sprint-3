version: '3.9'

services:
  device-managment:
    container_name: device-managment
    build: ./device-managment
    command: [ "/app.sh" ]
    volumes:
      - .:/fastapi_app
    ports:
      - "2000:8000"
    environment:
      - MODE=PROD
    depends_on:
      - db_device-managment

  db_device-managment:
    container_name: db_device-managment
    image: postgres:15.1
    ports:
      - "5440:5432"
    # Todo
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=db_device-managment
    volumes:
      - pg_db-device-managment:/var/lib/postresql/data/

  telemetry:
    container_name: telemetry
    build: ./telemetry
    command: [ "/app.sh" ]
    volumes:
      - .:/fastapi_app
    ports:
      - "3000:8000"
    environment:
      - MODE=PROD
    depends_on:
      - db_telemetry

  db_telemetry:
    container_name: db_telemetry
    image: influxdb:2
    ports:
      - 8086:8086
    environment:
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_USERNAME_FILE: /run/secrets/influxdb2-admin-username
      DOCKER_INFLUXDB_INIT_PASSWORD_FILE: /run/secrets/influxdb2-admin-password
      DOCKER_INFLUXDB_INIT_ADMIN_TOKEN_FILE: /run/secrets/influxdb2-admin-token
      DOCKER_INFLUXDB_INIT_ORG: docs
      DOCKER_INFLUXDB_INIT_BUCKET: home
    secrets:
      - influxdb2-admin-username
      - influxdb2-admin-password
      - influxdb2-admin-token
    volumes:
      - type: volume
        source: influxdb2-data
        target: /var/lib/influxdb2
      - type: volume
        source: influxdb2-config
        target: /etc/influxdb2
    depends_on:
      - kafka

  kong:
    container_name: kong
    image: kong
    restart: always
    environment:
      KONG_DATABASE: "off"
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_LOG_LEVEL: warn
      KONG_DECLARATIVE_CONFIG: /usr/local/kong/declarative/kong.yml
      KONG_ADMIN_LISTEN: 0.0.0.0:8001, 0.0.0.0:8444 ssl
      KONG_PROXY_LISTEN: 0.0.0.0:8000, 0.0.0.0:8443 ssl, 0.0.0.0:9080 http2, 0.0.0.0:9081 http2 ssl
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 120s
      timeout: 10s
      retries: 3
    volumes:
      - ./compose/kong/logs:/usr/local/kong/logs
      - ./compose/kong/logs/log.txt:/usr/local/kong/logs/log.txt
      - ./compose/kong/declarative:/usr/local/kong/declarative
      - ./compose/kong/config/nginx.conf:/usr/local/kong/nginx.conf
      - ./compose/kong/config/nginx-kong.conf:/usr/local/kong/nginx-kong.conf
    ports:
      - "8001:8001"
      - "8444:8444"
      - "8000:8000"
      - "8443:8443"
      - "9080:9080"
      - "9081:9081"
    depends_on:
      - device-managment

  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:7.4.4
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181

  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:7.4.4
    depends_on:
      - zookeeper
    ports:
      - "29092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      # KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://127.0.0.1:29092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://127.0.0.1:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1


secrets:
  influxdb2-admin-username:
    file: ./compose/secrets/influxdb2-admin-username
  influxdb2-admin-password:
    file: ./compose/secrets/influxdb2-admin-password
  influxdb2-admin-token:
    file: ./compose/secrets/influxdb2-admin-token

volumes:
  pg_db-device-managment:
  influxdb2-data:
  influxdb2-config:

